@@
1. CREATION OF TRACKING BRANCHES

After we performed git-fetch, Git may have created a few new remote-tracking branches, eg. "origin/public-branch". We can branch off this remote-tracking branch to create a local branch (we have all the commmits of the remote-tracking branch after the fetch).

$ git checkout -b public-branch1 origin/public-branch1
Branch public-branch1 set up to track remote branch public-branch1 from origin.
Switched to a new branch 'public-branch1'

Checking out a local branch from a remote-tracking branch automatically creates what is called a (local) "tracking branch". 
The branch it tracks is called an "upstream branch". Tracking branches are local branches that have a direct relationship
to a remote branch.

If you are on a tracking branch and type "git pull", Git automatically knows which remote (i.e. server) to fetch from and 
which remote tracking branch (e.g. origin/feature1) to merge into our current branch.

NOTE: When you clone a repository using git-clone, Git automatically creates a master branch that tracks origin/master.

@@
2. ALTERNATIVE WAYS TO CREATE TRACKING BRANCHES

The preceding operation with checking out a remote tracking branch to track a local branch is very common. It has two shortcuts:

1) git checkout --track origin/public-branch1

This will create the local "public-branch1" branch off "origin/public-branch1".

2) git checkout public-branch1

This will behave just as the --track option to the preceding checkout command. The operation is only possible if
there is no ambiguity and only a single remote contains public-branch1.

3) git checkout -b newbranch origin/public-branch1

This will create the "newbranch" branch off "origin/public-branch1".

@@
3. SETTING AN UPSTREAM BRANCH

If you already have a local branch and want to set it to track a remote branch you just fetched, or want to change the upstream branch you're tracking, you can use the -u or --set-upstream-to option to git-branch to explicitly set it at any time.

$ git branch -u origin/public-branch1

@@
4. LISTING TRACKING BRANCHES

Use

$ git branch --vv
  master         de9d409 [origin/master: behind 2] Merge document housekeeping: changed location
  mediumfeature  5aa4533 [origin/mediumfeature] Testing git-fetch: new commit
  mediumfeature2 fcfa2fd Sumulate a merge conflict
  newidea        13476de [origin/newidea] User 1 - 3rd idea
* public-branch1 24a2dc5 [origin/public-branch1] new info in branching chapter

Here, we see how individual branches relate to their remote counterparts. We also see comparison of the state 
of each individual local branch to remote (ahead or behind by X commits).
